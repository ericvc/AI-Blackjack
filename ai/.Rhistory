strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
M <- M %>% mutate(total_val = pc1 + pc2 + 2)
ggplot(M[M$action>0,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=FALSE, size=0.75) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=FALSE, size=0.75, inherit.aes = FALSE) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
M <- M %>% mutate(total_val = pc1 + pc2 + 2)
ggplot(M[M$action>0,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=FALSE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
M <- M %>% mutate(total_val = pc1 + pc2 + 2)
ggplot(M[M$action>0,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
head(M)
head(M,100)
ggplot(M[M$action>0 & M$duc == 11,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == 10,], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
M$duc
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_label() +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_label(aes(label=paste0(pc1,pc2))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_label(aes(label=paste(pc1,pc2,","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
geom_label(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
library(ggrepel)
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 10",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=duc)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5))
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc)
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc)
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, group=duc, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0 & M$duc == "Dealer Up Card: 11",], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=TRUE, size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="black", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=9.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=pc1)) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=factor(pc1))) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_c() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=factor(pc1))) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
M <- M %>% mutate(total_val = pc1 + pc2 + 2)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=factor(pc1))) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
M <- M %>% mutate(total_val = pc1 + pc2 + 2)
ggplot(M[M$action>0,], aes(x=total_val, y=action, color=factor(pc1+1))) +
ggtitle("Probability of Winning if the Player Opts to 'Stay'") +
geom_point() +
# ggrepel::geom_label_repel(aes(label=paste(pc1, pc2, sep=","))) +
geom_smooth(se=FALSE, color="gray50", size=0.75, inherit.aes = FALSE, mapping=aes(x=total_val, y=action)) +
scale_color_viridis_d() +
scale_x_continuous("Player Hand Value", breaks = seq(2,21,1)) +
scale_y_continuous("Pr(Win | Stay)") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5)) +
facet_wrap(.~duc, nrow = 2, ncol=5)
library(tidyr)
library(ggplot2)
library(dplyr)
reticulate::source_python("load_model_results.py")
M = get_predctions() %>%
reshape::melt()
names(M) <- c("pc1","pc2","duc","action")
M <- M %>%
mutate(duc = sprintf("Dealer Up Card: %d", M$duc + 1)) %>%
mutate(duc = factor(duc, paste("Dealer Up Card:",2:11)))
card_labels = c(2,3,4,5,6,7,8,9,10,"A")
pc = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action)) +
ggtitle("Probability of Winning with Initial Hand if Player 'Stays'", "") +
geom_tile() +
coord_equal() +
scale_fill_viridis_c("Probability", values=c(0,1)) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pc
action_class = ifelse(M$action >= 0.6,
"Stay",
ifelse(
M$action < 0.6 &
M$action >= 0.5,
"A-Stay",
ifelse(M$action < 0.5 & M$action >= 0.4, "A-Hit", "Hit")
))
action_class = factor(action_class, c("Hit","A-Hit","A-Stay","Stay"))
pd = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action_class[M$action>0])) +
ggtitle("Best Predicted Action for Initial Hand",
"Predictions are derived from the trained neural network") +
geom_tile() +
coord_equal() +
scale_fill_viridis_d("Action", begin=0.1, end=0.85) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pd
action_class = ifelse(M$action >= 0.6,
"Stay",
ifelse(
M$action < 0.6 &
M$action >= 0.5,
"A-Stay",
ifelse(M$action < 0.5 & M$action >= 0.4, "A-Hit", "Hit")
))
action_class = factor(action_class, c("Hit","A-Hit","A-Stay","Stay"))
pd = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action_class[M$action>0])) +
ggtitle("Best Predicted Action for Initial Hand",
"Predictions are derived from the trained neural network") +
geom_tile() +
coord_equal() +
scale_fill_viridis_d("Action", begin=0.1, end=0.85) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pd
# action_class = ifelse(M$action >= 0.6,
#                       "Stay",
#                       ifelse(
#                         M$action < 0.6 &
#                           M$action >= 0.5,
#                         "A-Stay",
#                         ifelse(M$action < 0.5 & M$action >= 0.4, "A-Hit", "Hit")
#                       ))
action_class = ifelse(M$action > 0.5, "Stay", "Hit")
action_class = factor(action_class, c("Hit","Stay"))
pd = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action_class[M$action>0])) +
ggtitle("Best Predicted Action for Initial Hand",
"Predictions are derived from the trained neural network") +
geom_tile() +
coord_equal() +
scale_fill_viridis_d("Action", begin=0.1, end=0.85) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pd
action_class = ifelse(M$action >= 0.6,
"Stay",
ifelse(
M$action < 0.6 &
M$action >= 0.5,
"A-Stay",
ifelse(M$action < 0.5 & M$action >= 0.4, "A-Hit", "Hit")
))
action_class = factor(action_class, c("Hit","A-Hit","A-Stay","Stay"))
pd = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action_class[M$action>0])) +
ggtitle("Best Predicted Action for Initial Hand",
"Predictions are derived from the trained neural network") +
geom_tile() +
coord_equal() +
scale_fill_viridis_d("Action", begin=0.1, end=0.85) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pd
library(tidyr)
library(ggplot2)
library(dplyr)
reticulate::source_python("load_model_results.py")
M = get_predctions() %>%
reshape::melt()
names(M) <- c("pc1","pc2","duc","action")
M <- M %>%
mutate(duc = sprintf("Dealer Up Card: %d", M$duc + 1)) %>%
mutate(duc = factor(duc, paste("Dealer Up Card:",2:11)))
card_labels = c(2,3,4,5,6,7,8,9,10,"A")
pc = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action)) +
ggtitle("Probability of Winning with Initial Hand if Player 'Stays'", "") +
geom_tile() +
coord_equal() +
scale_fill_viridis_c("Probability", values=c(0,1)) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pc
action_class = ifelse(M$action >= 0.6,
"Stay",
ifelse(
M$action < 0.6 &
M$action >= 0.5,
"A-Stay",
ifelse(M$action < 0.5 & M$action >= 0.4, "A-Hit", "Hit")
))
action_class = factor(action_class, c("Hit","A-Hit","A-Stay","Stay"))
pd = ggplot(M[M$action>0,], aes(x=factor(pc1), y=factor(pc2), fill=action_class[M$action>0])) +
ggtitle("Best Predicted Action for Initial Hand",
"Predictions are derived from the trained neural network") +
geom_tile() +
coord_equal() +
scale_fill_viridis_d("Action", begin=0.1, end=0.85) +
facet_wrap(.~duc, nrow=2, ncol=5) +
scale_x_discrete("Player Card 1", labels=card_labels) +
scale_y_discrete("Player Card 2", labels=card_labels) +
geom_vline(xintercept = 9.5, color="white") +
theme_minimal() +
theme(axis.title = element_text(face="bold"),
strip.text = element_text(size=7),
axis.text = element_text(size=7.5))
pd
